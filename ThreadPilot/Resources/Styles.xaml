<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Colors -->
    <Color x:Key="PrimaryColor">#0078D7</Color>
    <Color x:Key="SecondaryColor">#FF8C00</Color>
    <Color x:Key="BackgroundColor">#F5F5F5</Color>
    <Color x:Key="CardColor">#FFFFFF</Color>
    <Color x:Key="TextPrimaryColor">#333333</Color>
    <Color x:Key="TextSecondaryColor">#666666</Color>
    <Color x:Key="BorderColor">#E0E0E0</Color>
    <Color x:Key="HeaderColor">#0078D7</Color>
    <Color x:Key="StatusBarColor">#F0F0F0</Color>
    
    <!-- Dark Theme Colors -->
    <Color x:Key="DarkPrimaryColor">#0078D7</Color>
    <Color x:Key="DarkSecondaryColor">#FF8C00</Color>
    <Color x:Key="DarkBackgroundColor">#202020</Color>
    <Color x:Key="DarkCardColor">#2D2D2D</Color>
    <Color x:Key="DarkTextPrimaryColor">#FFFFFF</Color>
    <Color x:Key="DarkTextSecondaryColor">#B0B0B0</Color>
    <Color x:Key="DarkBorderColor">#404040</Color>
    <Color x:Key="DarkHeaderColor">#181818</Color>
    <Color x:Key="DarkStatusBarColor">#181818</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="CardBackgroundBrush" Color="{StaticResource CardColor}"/>
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource TextPrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource TextSecondaryColor}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource HeaderColor}"/>
    <SolidColorBrush x:Key="StatusBarBackgroundBrush" Color="{StaticResource StatusBarColor}"/>

    <!-- Button Styles -->
    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="4" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#0063B1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#005A9E"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#CCCCCC"/>
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SecondaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0F7FF"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#E0F0FF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="#CCCCCC"/>
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="4" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFFFFF22"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFFFFF44"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFFFFF88"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListBox Styles -->
    <Style x:Key="NavigationListBoxStyle" TargetType="ListBox">
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="8,0"/>
                    <Setter Property="Margin" Value="0,2"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border x:Name="Border" 
                                        Background="{TemplateBinding Background}" 
                                        CornerRadius="4" 
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" TargetName="Border" />
                                        <Setter Property="TextElement.Foreground" Value="White"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#F0F0F0" TargetName="Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ProgressBar Styles -->
    <Style x:Key="CustomProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <Border x:Name="PART_Track" 
                                Background="#EEEEEE" 
                                CornerRadius="5"/>
                        <Border x:Name="PART_Indicator" 
                                Background="{StaticResource PrimaryBrush}" 
                                CornerRadius="5" 
                                HorizontalAlignment="Left" 
                                Width="{TemplateBinding Value, Converter={StaticResource ProgressConverter}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- TextBox Styles -->
    <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="False" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ComboBox Styles -->
    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                      ClickMode="Press" 
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <ContentPresenter x:Name="ContentSite" 
                                          IsHitTestVisible="False" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          HorizontalAlignment="Left" 
                                          Margin="10,3,25,3" 
                                          VerticalAlignment="Center"/>
                        <Popup x:Name="Popup" 
                               Placement="Bottom" 
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown" 
                                  SnapsToDevicePixels="True" 
                                  MinWidth="{TemplateBinding ActualWidth}" 
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" 
                                        Background="{StaticResource CardBackgroundBrush}" 
                                        BorderBrush="{StaticResource BorderBrush}" 
                                        BorderThickness="1" 
                                        CornerRadius="0,0,4,4"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton Template for ComboBox -->
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" 
                    Grid.ColumnSpan="2" 
                    CornerRadius="4"
                    Background="{StaticResource CardBackgroundBrush}" 
                    BorderBrush="{StaticResource BorderBrush}" 
                    BorderThickness="1" />
            <Path x:Name="Arrow" 
                  Grid.Column="1" 
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center" 
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Fill="{StaticResource SecondaryTextBrush}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" TargetName="Border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Grid Styles -->
    <Style x:Key="GridCardStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="8"/>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>